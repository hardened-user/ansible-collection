---

- name: "Remove package: {{ chronyd_package_name }}"
  package:
    name: "{{ chronyd_package_name }}"
    state: absent
  tags:
    - ntpd
    - package


- name: "Install package: {{ ntpd_package_name }}"
  package:
    name: "{{ ntpd_package_name }}"
    state: present
  tags:
    - ntpd
    - package


- name: "Copy file from template: {{ ntpd_daemon_opts_file }}"
  template:
    src: "{{ ansible_os_family }}_{{ ansible_distribution_major_version }}.opts.j2"
    dest: "{{ ntpd_daemon_opts_file }}"
    owner: root
    group: root
    mode: 0640
    force: yes
  notify: restart ntpd
  tags:
    - ntpd
    - config


- name: "Copy file from template: {{ ntpd_conf_file }}"
  template:
    src: "{{ ansible_os_family }}_{{ ansible_distribution_major_version }}.conf.j2"
    dest: "{{ ntpd_conf_file }}"
    owner: root
    group: root
    mode: 0640
    force: yes
  notify:
    - restart ntpd
  tags:
    - ntpd
    - config


- name: "Service start: {{ ntpd_service_name }}"
  service:
    name: "{{ ntpd_service_name }}"
    state: started
    enabled: yes
  register: r_ntpd_start
  tags:
    - ntpd
    - service


- name: "Shell command: timedatectl set-ntp true"
  shell: |-
    which timedatectl || exit 0;
    STATE_OLD=$(timedatectl status | awk 'BEGIN{IGNORECASE = 1}!/time/' | md5sum);
    timedatectl set-ntp true;
    sleep 3;
    STATE_NEW=$(timedatectl status | awk 'BEGIN{IGNORECASE = 1}!/time/' | md5sum);
    if [[ ${STATE_NEW} != ${STATE_OLD} ]]; then echo ansible_changed_when; fi;
  args:
    executable: /bin/bash
  register: r_ntpd_timedatectl
  changed_when: '"ansible_changed_sign\n" in r_ntpd_timedatectl.stdout'
  tags:
    - ntpd
    - config
