---

- name: "Install package: {{ nginx_package_name }}"
  package:
    name: "{{ nginx_package_name }}"
    state: present
  tags:
    - nginx
    - package


- name: "Install package: openssl"
  package:
    name: "openssl"
    state: present
  tags:
    - nginx
    - package


- name: "Create directories ..."
  file:
    path: "{{ item.path }}"
    mode:  "{{ item.mode  | default('0755') }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    state: directory
  with_items:
    - { path: "{{ nginx_html_dir }}" }
    - { path: "{{ nginx_cert_dir }}", mode: '0750' }
  tags:
    - nginx
    - mkdir


- name: "Copy files (rsync): {{ nginx_conf_dir }}/"
  synchronize:
    src: "{{ nginx_conf_source_dir }}/"
    dest: "{{ nginx_conf_dir }}/"
    archive: no
    checksum: yes
    links: yes
    recursive: yes
    rsync_opts:
      - "--chown=root:root"
      - "--chmod=D0755,F0644"
      - "--exclude=.*"
  notify: reload nginx
  tags:
    - nginx
    - config
    - copy


- name: "Copy file from template: {{ nginx_conf_dir }}/nginx.conf"
  template:
    src: "nginx.conf.j2"
    dest: "{{ nginx_conf_dir }}/nginx.conf"
    owner: root
    group: root
    mode: 0755
    force: yes
  notify: reload nginx
  tags:
    - nginx
    - config


- name: "Copy files (rsync): {{ nginx_html_dir }}/"
  synchronize:
    src: "{{ nginx_html_source_dir }}/"
    dest: "{{ nginx_html_dir }}/"
    archive: no
    checksum: yes
    links: yes
    recursive: yes
    rsync_opts:
      - "--chown=root:root"
      - "--chmod=D0755,F0644"
      - "--exclude=.*"
  tags:
    - nginx
    - config
    - copy


# NOTE: Используем `copy` т.к. файлы должны быть зашифрованы
- name: "Copy files: {{ nginx_cert_dir }}/"
  copy:
    src: "{{ item }}"
    dest: "{{ nginx_cert_dir }}/"
    owner: root
    group: root
    mode: 0640
  with_fileglob:
    - "{{ nginx_cert_source_dir }}/*.*"
  notify: reload nginx
  tags:
    - nginx
    - config
    - copy


- name: "Generate a Self-Signed SSL certificate: {{ nginx_cert_dir }}"
  shell: |-
    test -e "{{ nginx_cert_dir }}/ssl-cert-snakeoil.key" || \
    openssl req -new -x509 -days 9999 -nodes \
        -subj "/C=RU/CN=localhost" \
        -out "{{ nginx_cert_dir }}/ssl-cert-snakeoil.pem" \
        -keyout "{{ nginx_cert_dir }}/ssl-cert-snakeoil.key" 2>&1
  register: result
  changed_when: '"writing new private key" in result.stdout'
  tags:
    - nginx
    - config


- name: "Copy file from template: {{ nginx_logrotate_conf_file }}"
  template:
    src: "{{ ansible_os_family }}_{{ ansible_distribution_major_version }}.logrotate.conf.j2"
    dest: "{{ nginx_logrotate_conf_file }}"
    owner: root
    group: root
    mode: 0644
    force: yes
  tags:
    - nginx
    - config


- name: "Service start: {{ nginx_service_name }}"
  service:
    name: "{{ nginx_service_name }}"
    state: started
    enabled: yes
  register: r_nginx_start
  tags:
    - nginx
    - startup
