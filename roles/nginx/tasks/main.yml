---
- name: "Install package: {{ nginx_package_name }}"
  ansible.builtin.package:
    name: "{{ nginx_package_name }}"
    state: present
  tags:
    - nginx
    - package


- name: "Add user '{{ nginx_user_name }}' to groups: {{ nginx_user_extra_groups }}"
  ansible.builtin.user:
    name: "{{ nginx_user_name }}"
    groups: "{{ nginx_user_extra_groups }}"
    append: true
  register: r_nginx_add_group
  notify: restart nginx
  tags:
    - nginx
    - config
    - user


- name: "Create directories: ..."
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0755') }}"
  with_items:
    - { path: "{{ nginx_conf_dir }}", mode: '0750' }
    - { path: "{{ nginx_cert_dir }}", mode: '0700' }
    - { path: "{{ nginx_root_dir }}" }
  tags:
    - nginx
    - mkdir


- name: "Copy files (rsync): {{ nginx_conf_dir }}/"
  ansible.posix.synchronize:
    src: "{{ nginx_conf_source_dir }}/"
    dest: "{{ nginx_conf_dir }}/"
    archive: false
    times: false
    perms: true
    checksum: true
    links: true
    recursive: true
    rsync_opts:
      - "--chown=root:root"
      - "--chmod=D0750,F0644"
      - "--exclude=.*"
  notify: reload nginx
  tags:
    - nginx
    - config
    - copy


- name: "Copy file from template: {{ nginx_conf_dir }}/nginx.conf"
  ansible.builtin.template:
    src: "nginx.conf.j2"
    dest: "{{ nginx_conf_dir }}/nginx.conf"
    owner: root
    group: root
    mode: '0644'
  notify: reload nginx
  tags:
    - nginx
    - config


# NOTE: Использовать `copy` т.к. файлы могут быть зашифрованы через ansible-vault encrypt
- name: "Copy files: {{ nginx_cert_dir }}/"
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ nginx_cert_dir }}/"
    owner: root
    group: root
    mode: '0640'
  notify: reload nginx
  with_fileglob:
    - "{{ nginx_cert_source_dir }}/*.*"
  tags:
    - nginx
    - config
    - copy


- name: "Copy files (rsync): {{ nginx_root_dir }}/"
  ansible.posix.synchronize:
    src: "{{ nginx_root_source_dir }}/"
    dest: "{{ nginx_root_dir }}/"
    archive: false
    times: false
    perms: true
    checksum: true
    links: true
    recursive: true
    rsync_opts:
      - "--chown=root:root"
      - "--chmod=D0755,F0644"
      - "--exclude=.*"
  notify: reload nginx
  tags:
    - nginx
    - config
    - copy


- name: "Copy file from template: {{ nginx_logrotate_conf_file }}"
  ansible.builtin.template:
    src: "logrotate.d/{{ ansible_distribution }}_{{ ansible_distribution_major_version }}.conf.j2"
    dest: "{{ nginx_logrotate_conf_file }}"
    owner: root
    group: root
    mode: '0644'
  tags:
    - nginx
    - config


- name: "Service start: {{ nginx_service_name }}"
  ansible.builtin.service:
    name: "{{ nginx_service_name }}"
    state: started
    enabled: true
  register: r_nginx_start
  tags:
    - nginx
    - service
