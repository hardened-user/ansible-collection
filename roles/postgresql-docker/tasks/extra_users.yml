---
- name: "Get recovery status"
  community.postgresql.postgresql_query:
    query: "SELECT pg_is_in_recovery()"
    login_host: "{{ postgresql_listen_addr }}"
    login_port: "{{ postgresql_listen_port }}"
    login_user: "{{ postgresql_init_user }}"
    login_password: "{{ postgresql_init_pass }}"
    login_db: "{{ postgresql_init_base }}"
  register: _result


- name: "Create users: ..."
  community.postgresql.postgresql_user:
    name: "{{ item.name }}"
    password: "{{ item.pass }}"
    role_attr_flags: "{{ item.attr | default('LOGIN') }}"
    state: present
    encrypted: true
    login_host: "{{ postgresql_listen_addr }}"
    login_port: "{{ postgresql_listen_port }}"
    login_user: "{{ postgresql_init_user }}"
    login_password: "{{ postgresql_init_pass }}"
    login_db: "{{ postgresql_init_base }}"
  when: not (_result.query_result | first)['pg_is_in_recovery']
  loop: "{{ postgresql_extra_users | selectattr('name','defined') }}"
  loop_control:
    label: "{{ item.name }}"


- name: "Create databases: ..."
  community.postgresql.postgresql_db:
    name: "{{ item.base }}"
    encoding: "UTF-8"
    owner: "{{ item.name }}"
    state: present
    login_host: "{{ postgresql_listen_addr }}"
    login_port: "{{ postgresql_listen_port }}"
    login_user: "{{ postgresql_init_user }}"
    login_password: "{{ postgresql_init_pass }}"
    maintenance_db: "{{ postgresql_init_base }}"
  when: not (_result.query_result | first)['pg_is_in_recovery']
  loop: "{{ postgresql_extra_users | selectattr('name','defined') | selectattr('base','defined') }}"
  loop_control:
    extended: false
    label: "{{ item.base }} user={{ item.name }}"
