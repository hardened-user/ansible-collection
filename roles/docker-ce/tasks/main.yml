---
- name: "Include OS distribution specific variables"
  ansible.builtin.include_vars: "{{ ansible_distribution }}.yml"
  tags:
    - docker-ce


- name: "Include OS distribution specific tasks"
  ansible.builtin.include_tasks: "{{ ansible_distribution }}.yml"
  tags:
    - docker-ce


- name: "Remove packages: {{ docker_ce_remove_packages | sort | join(' ') }}"
  ansible.builtin.package:
    name: "{{ docker_ce_remove_packages }}"
    state: absent
  when: docker_ce_remove_packages
  tags:
    - docker-ce
    - packages


- name: "Install packages: {{ docker_ce_install_packages | sort | join(' ') }}"
  ansible.builtin.package:
    name: "{{ docker_ce_install_packages }}"
    state: present
  tags:
    - docker-ce
    - packages


- name: "Create directories: ..."
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0755') }}"
  with_items:
    - { path: "{{ docker_ce_conf_dir }}" }
    - { path: "{{ docker_ce_systemd_override_dir }}" }
  tags:
    - docker-ce


- name: "Copy file from template: {{ docker_ce_systemd_override_file }}"
  ansible.builtin.template:
    src: "service.override.conf.j2"
    dest: "{{ docker_ce_systemd_override_file }}"
    owner: root
    group: root
    mode: '0644'
  notify:
    - systemd daemon reload
    - restart docker-ce
  tags:
    - docker-ce


- name: "Copy file from template: {{ docker_ce_conf_file }}"
  ansible.builtin.template:
    src: "daemon.json.j2"
    dest: "{{ docker_ce_conf_file }}"
    owner: root
    group: root
    mode: '0644'
  notify: restart docker-ce
  tags:
    - docker-ce


- name: "Service start: {{ docker_ce_service_name }}"
  ansible.builtin.service:
    name: "{{ docker_ce_service_name }}"
    state: started
    enabled: true
  register: r_docker_ce_start
  tags:
    - docker-ce
