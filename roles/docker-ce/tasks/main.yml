---

- name: "Include OS family specific variables"
  include_vars: "{{ ansible_os_family }}_{{ ansible_distribution_major_version }}.yml"
  tags:
    - docker


- name: "Remove packages: {{ docker_remove_packages | join(' ') }}"
  package:
    name: "{{ docker_remove_packages }}"
    state: absent
  tags:
    - docker
    - package


- name: "Include OS distribution specific tasks"
  include_tasks: "{{ ansible_distribution }}_{{ ansible_distribution_major_version }}.yml"
  tags:
    - docker


- name: "Install packages: {{ docker_install_packages | join(' ') }}"
  package:
    name: "{{ docker_install_packages }}"
    state: present
  tags:
    - docker
    - package


- name: "Create directory: {{ docker_conf_dir }}"
  file:
    path: "{{ docker_conf_dir }}"
    owner: root
    group: root
    mode:  0755
    state: directory
  tags:
    - docker
    - mkdir


- name: "Copy file from template: {{ docker_conf_file }}"
  template:
    src: "daemon.json.j2"
    dest: "{{ docker_conf_file }}"
    owner: root
    group: root
    mode: 0644
    force: yes
  notify: restart docker
  tags:
    - docker
    - config


- name: "Create file: /etc/systemd/system/{{ docker_service_name }}.service.d/override.conf"
  copy:
    content: |-
      # ATTENTION !!! Ansible managed.
      [Service]
      {% for x in docker_environment_keys | dict2items %}
      Environment={{ x.key }}={{ x.value }}
      {% endfor %}
    dest: "/etc/systemd/system/{{ docker_service_name }}.service.d/override.conf"
    mode: 0644
    force: yes
  when: docker_environment_keys.keys() | length > 0
  notify: restart docker
  tags:
    - docker
    - service


- name: "Service start: {{ docker_service_name }}"
  service:
    name: "{{ docker_service_name }}"
    state: started
    enabled: yes
  register: r_docker_start
  tags:
    - docker
    - service
