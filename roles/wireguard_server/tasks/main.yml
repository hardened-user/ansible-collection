---
- name: "Validate"
  ansible.builtin.include_tasks: "validate.yml"
  tags:
    - wireguard_server
    - validate


- name: "Install package: {{ wireguard_package_name }}"
  ansible.builtin.package:
    name: "{{ wireguard_package_name }}"
    state: present
  tags:
    - wireguard_server
    - packages


- name: "Generate new server private & public key: ..."
  ansible.builtin.shell: |-
    set -euo pipefail;
    cd "{{ wireguard_conf_dir }}";
    test -f wgs0-server-private.key && exit 0;
    wg genkey > wgs0-server-private.key;
    cat wgs0-server-private.key | wg pubkey > wgs0-server-public.key;
    chmod 600 wgs0-server-private.key wgs0-server-public.key;
    echo ansible_changed_sign;
  args:
    executable: /bin/bash
  register: _result
  changed_when: "'ansible_changed_sign' in _result.stdout"
  when: wireguard_server_private_key == "auto"
  tags:
    - wireguard_server
    - config


- name: "Read file: {{ wireguard_conf_dir }}/wgs0-server-private.key"
  ansible.builtin.slurp:
    src: "{{ wireguard_conf_dir }}/wgs0-server-private.key"
  register: _result
  when: wireguard_server_private_key == "auto"
  tags:
    - wireguard_server
    - config


- name: "Define server private key"
  ansible.builtin.set_fact:
    _wireguard_server_private_key: "{{ _result.content | b64decode | trim }}"
  when: wireguard_server_private_key == "auto"
  tags:
    - wireguard_server
    - config


- name: "Create files: {{ wireguard_conf_dir }}/"
  ansible.builtin.copy:
    dest: "{{ wireguard_conf_dir }}/{{ item.filename }}"
    content: "{{ item.content }}\n"
    owner: root
    group: root
    mode: '0600'
  when: wireguard_server_private_key != "auto"
  loop:
    - { filename: "wgs0-server-private.key", content: "{{ wireguard_server_private_key | trim }}" }
    - { filename: "wgs0-server-public.key", content: "{{ wireguard_server_public_key | trim }}" }
  loop_control:
    label: "{{ item.filename }}"
  tags:
    - wireguard_server
    - config


- name: "Copy file from template: {{ wireguard_conf_dir }}/wgs0.conf"
  ansible.builtin.template:
    src: "wgs0.conf.j2"
    dest: "{{ wireguard_conf_dir }}/wgs0.conf"
    owner: root
    group: root
    mode: '0600'
  notify: restart wireguard server
  tags:
    - wireguard_server
    - config


- name: "Service start: wg-quick@wgs0"
  ansible.builtin.service:
    name: "wg-quick@wgs0"
    state: started
    enabled: true
  register: _wireguard_server_service_start
  tags:
    - wireguard_server
    - service
